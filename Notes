Model - Singular - eg Singular, Lightnovel
Controller - Plural - eg Lightnovels, 

1) Dump db into seed: rake db:seed:dump

> t = CheckLatestChapter.new
> t.perform(1,103)

2) Sidekiq:
    a) Redis
        I) Install :    wget http://download.redis.io/redis-stable.tar.gz
                    tar xvzf redis-stable.tar.gz
                    cd redis-stable
                    make
        II) Test installation:  make test
        III) Run reddis : redis-server
        
        For C9:
        
        CREATE USER username SUPERUSER PASSWORD 'password';
        
        sudo service postgresql start
        sudo sudo -u postgres psql
        CREATE USER username SUPERUSER PASSWORD 'password';
        \q
        CREATE USER username SUPERUSER;
        UPDATE pg_database SET datistemplate = FALSE WHERE datname = 'template1';
        
    b) Sidekiq
        I) bundle exec sidekiq

            <!-- <td><%= link_to 'Edit', edit_lightnovel_chapter_path(@lightnovel, chapter) %></td>-->
            <!--<td><%= link_to 'Destroy', lightnovel_chapter, method: :delete, data: { confirm: 'Are you sure?' } %></td>-->

            apt-get install postgresql-9.4 
            sudo apt-get install libpq-dev
            gem install pg

            bundle install

3) Cache: expire cache : expire_fragment("lightnovel_index")
    clear cache: Rails.cache.clear

4) Inserting to the DB: Selector.create url_base: "www.royalroadl.com", selector: "td:nth-child(3) a", name: "div.largetext"            

Chapter.create lightnovel: Lightnovel.find(562), chapter_name: "And so I got Burgled", chapter_number: 15, chapter_url: "http://royalroadl.com/forum/showthread.php?tid=17921"

5) Rails server in c9 : rails s -p $PORT -b $IP

6) PostgreSQL:setup https://github.com/Aerogami/guides/wiki/Cloud9-workspace-setup-with-Rails-and-Postgresql


Against the Gods
Wielding the sky poison pearl, receiving the blood of an evil god, cultivating the strength to oppose heaven, a lord overlooking the world!
http://www.wuxiaworld.com/atg-index/
p:nth-child(1) span a
.entry-title
Prologue
http://www.wuxiaworld.com/atg-index/prologue/


        @lightnovel = Lightnovel.create name: "0.0 Mhz", description: description, home_url: home_url, number_of_chapters: number_of_chapters, selector_next_chapter: "manga", selector_name: "manga", lightnovel_type: "manga"
        
        
    <%= render 'follow_form' if logged_in? %>    
        
        <% unless current_user?(@user) %>
  <div id="follow_form">
  <% if current_user.following?(@user) %>
    <%= render 'unfollow' %>
  <% else %>
    <%= render 'follow' %>
  <% end %>
  </div>
<% end %>

<%= form_for(current_user.active_relationships.build) do |f| %>
  <div><%= hidden_field_tag :followed_id, @user.id %></div>
  <%= f.submit "Follow", class: "btn btn-primary" %>
<% end %>

<%= form_for(current_user.active_relationships.find_by(followed_id: @user.id),
             html: { method: :delete }) do |f| %>
  <%= f.submit "Unfollow", class: "btn" %>
<% end %>







Iframe load detection: 

http://stackoverflow.com/questions/12267010/how-can-i-detect-whether-an-iframe-is-loaded

http://railscasts.com/episodes/328-twitter-bootstrap-basics?autoplay=true